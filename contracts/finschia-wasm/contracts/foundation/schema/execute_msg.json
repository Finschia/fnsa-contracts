{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "fund_treasury"
      ],
      "properties": {
        "fund_treasury": {
          "type": "object",
          "required": [
            "amount",
            "from"
          ],
          "properties": {
            "amount": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            },
            "from": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_from_treasury"
      ],
      "properties": {
        "withdraw_from_treasury": {
          "type": "object",
          "required": [
            "amount",
            "authority",
            "to"
          ],
          "properties": {
            "amount": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            },
            "authority": {
              "type": "string"
            },
            "to": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "submit_proposal"
      ],
      "properties": {
        "submit_proposal": {
          "type": "object",
          "required": [
            "exec",
            "messages",
            "metadata",
            "proposers"
          ],
          "properties": {
            "exec": {
              "type": "integer",
              "format": "int32"
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Any"
              }
            },
            "metadata": {
              "type": "string"
            },
            "proposers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_proposal"
      ],
      "properties": {
        "withdraw_proposal": {
          "type": "object",
          "required": [
            "address",
            "proposal_id"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vote"
      ],
      "properties": {
        "vote": {
          "type": "object",
          "required": [
            "exec",
            "metadata",
            "option",
            "proposal_id",
            "voter"
          ],
          "properties": {
            "exec": {
              "type": "integer",
              "format": "int32"
            },
            "metadata": {
              "type": "string"
            },
            "option": {
              "type": "integer",
              "format": "int32"
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "voter": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "exec"
      ],
      "properties": {
        "exec": {
          "type": "object",
          "required": [
            "proposal_id",
            "signer"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_members"
      ],
      "properties": {
        "update_members": {
          "type": "object",
          "required": [
            "authority",
            "member_updates"
          ],
          "properties": {
            "authority": {
              "type": "string"
            },
            "member_updates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MemberRequest"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "leave_foundation"
      ],
      "properties": {
        "leave_foundation": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_decision_policy"
      ],
      "properties": {
        "update_decision_policy": {
          "type": "object",
          "required": [
            "authority"
          ],
          "properties": {
            "authority": {
              "type": "string"
            },
            "decision_policy": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Any"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_censorship"
      ],
      "properties": {
        "update_censorship": {
          "type": "object",
          "required": [
            "authority"
          ],
          "properties": {
            "authority": {
              "type": "string"
            },
            "censorship": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Censorship"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "grant"
      ],
      "properties": {
        "grant": {
          "type": "object",
          "required": [
            "authority",
            "grantee"
          ],
          "properties": {
            "authority": {
              "type": "string"
            },
            "authorization": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Any"
                },
                {
                  "type": "null"
                }
              ]
            },
            "grantee": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "revoke"
      ],
      "properties": {
        "revoke": {
          "type": "object",
          "required": [
            "authority",
            "grantee",
            "msg_type_url"
          ],
          "properties": {
            "authority": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Any": {
      "type": "object",
      "required": [
        "type_url",
        "value"
      ],
      "properties": {
        "type_url": {
          "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a \\[google.protobuf.Type][\\] value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the URL, or have them precompiled into a binary to avoid any lookup. Therefore, binary compatibility needs to be preserved on changes to types. (Use versioned type names to manage breaking changes.)\n\nNote: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.",
          "type": "string"
        },
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      }
    },
    "Censorship": {
      "type": "object",
      "required": [
        "authority",
        "msg_type_url"
      ],
      "properties": {
        "authority": {
          "type": "integer",
          "format": "int32"
        },
        "msg_type_url": {
          "type": "string"
        }
      }
    },
    "Coin": {
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method signatures required by gogoproto.",
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "type": "string"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "MemberRequest": {
      "description": "MemberRequest represents a foundation member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests.",
      "type": "object",
      "required": [
        "address",
        "metadata",
        "remove"
      ],
      "properties": {
        "address": {
          "description": "address is the member's account address.",
          "type": "string"
        },
        "metadata": {
          "description": "metadata is any arbitrary metadata attached to the member.",
          "type": "string"
        },
        "remove": {
          "description": "remove is the flag which allows one to remove the member by setting the flag to true.",
          "type": "boolean"
        }
      }
    }
  }
}
